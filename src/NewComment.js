import React, { useState } from 'react';
// import { ref, set, push } from "firebase/database";
import { ref, child, push, update } from "firebase/database";
import { db } from "./firebase.js";

// import { getDatabase, ref, child, push, update } from "firebase/database";

// function writeNewPost(uid, username, picture, title, body) {
//   const db = getDatabase();

//   // A post entry.
//   const postData = {
//     author: username,
//     uid: uid,
//     body: body,
//     title: title,
//     starCount: 0,
//     authorPic: picture
//   };

//   // Get a key for a new Post.
//   const newPostKey = push(child(ref(db), 'posts')).key;

//   // Write the new post's data simultaneously in the posts list and the user's post list.
//   const updates = {};
//   updates['/posts/' + newPostKey] = postData;
//   updates['/user-posts/' + uid + '/' + newPostKey] = postData;

//   return update(ref(db), updates);
// }

export default function NewComment() {
    const [comment, setComment] = useState('');
  
    function handleClick(e) {
      e.preventDefault();
      const newCommentKey = push(child(ref(db), '/comments/')).key;
      const updates = {};
  const newComment = {
        commentID: newCommentKey,
        userName: 'Scott',
        userToken: 'ifdshoiadklsf90239vnkc92',
        drinkID: 'commentDrinkID',
        timeStamp: performance.timeOrigin,
        text: comment,
      };
      
    updates['/comments/' + newCommentKey] = newComment;
    return (
        update(ref(db), updates).then(() => {
            console.log('Data saved successfully!')
      })
      .catch((error) => {
        console.log('problem writing')
      })
    )}
  
    return (
      <>
        <form>
          <label>New:</label>
          <input
            type="text"
            value={comment}
            onChange={(e) => setComment(e.target.value)}
          />
          <input
            type="submit"
            value="add"
            onClick={handleClick}
            onKeyDown={(e) =>
              e.key === 'Enter' ? handleClick(e) : ''
            }
          />
        </form>
      </>
    );
  }
  

// export default function NewComment ({commentDrinkID}){
//     export default function NewComment (){
//     const [comment, setComment] = useState('');
//     console.log(ref(db, 'comments'))
//     function handleClick(e) {
//         e.preventDefault();
//         set(ref(db, 'comments'), {
//             commentID: crypto.randomUUID(),
//             userName: 'Scott',
//             userToken: 'ifdshoiadklsf90239vnkc92', 
//             drinkID: 'commentDrinkID', 
//             timeStamp: performance.timeOrigin,
//             text: comment
//             }
//         );
//     }  
//     return (
//             <>
//             <form>
//               <label>
//                 New:
//               </label>
//               <input
//                 type="text"
//                 value={comment}
//                 onChange={e => setComment(e.target.value)}
//               />
//               <input
//                 type="submit"
//                 value="add"
//                 onClick={handleClick}
//                 onKeyDown={e => e.key === 'Enter' ? handleClick: ''}
//               />
//             </form>  
//         </>
//           );
// }



// export default function NewComment() {
//   const [comment, setComment] = useState('');

//   function handleClick(e) {
//     e.preventDefault();
// // Generate a reference to a new location and add some data using push()

// const newCommentRef = push(ref(db, '/comments'));

// // Get the unique key generated by push()
// const newCommentID = newCommentRef.key;
//     set(newCommentRef, {
//       commentID: newCommentID,
//       userName: 'Scott',
//       userToken: 'ifdshoiadklsf90239vnkc92',
//       drinkID: 'commentDrinkID',
//       timeStamp: performance.timeOrigin,
//       text: comment,
//     });
//   }

//   return (
//     <>
//       <form>
//         <label>New:</label>
//         <input
//           type="text"
//           value={comment}
//           onChange={(e) => setComment(e.target.value)}
//         />
//         <input
//           type="submit"
//           value="add"
//           onClick={handleClick}
//           onKeyDown={(e) =>
//             e.key === 'Enter' ? handleClick(e) : ''
//           }
//         />
//       </form>
//     </>
//   );
// }
